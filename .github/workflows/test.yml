name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run check

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm test

      - name: Update snapshots if missing
        if: failure()
        run: npx playwright test --update-snapshots

      - name: Check for commit message trigger
        id: check-trigger
        if: failure()
        env:
          TRIGGER_PHRASE: "[update-snapshots]"
        run: |
          echo "Checking for trigger phrase: $TRIGGER_PHRASE"
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          if echo "$COMMIT_MESSAGE" | grep -q "$TRIGGER_PHRASE"; then
            echo "trigger=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Found trigger phrase in commit message"
          else
            echo "trigger=false" >> $GITHUB_OUTPUT
            echo "‚ùå Trigger phrase not found"
          fi

      - name: Commit updated snapshots
        if: failure() && steps.check-trigger.outputs.trigger == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull --rebase origin ${{ github.head_ref || github.ref_name }}
          git add tests/
          if git diff --staged --quiet; then
            echo "No snapshots to commit"
          else
            git commit -m "ü§ñ Update Linux snapshots for visual regression tests" --no-verify
            git push origin HEAD:${{ github.head_ref || github.ref_name }}
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7
